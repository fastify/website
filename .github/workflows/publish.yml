name: Publish

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

on:
  # push on main branch means to deploy production
  push:
    branches:
      - main
  # pull-request means to deploy preview
  pull_request_target:
  # workflow_dispatch means to manual deploy production
  workflow_dispatch:
  # workflow_call means to deploy production from external workflow
  # it would be useful to trigger from fastify main repo instead of
  # daily schedule
  workflow_call:

jobs:
  build-and-upload:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      # we set the correct repository and reference sha for PR preview
      - name: Checkout PR
        if: ${{ github.event_name == 'pull_request_target' }}
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      # we set the correct reference sha for production
      - name: Checkout
        if: ${{ github.event_name != 'pull_request_target' }}
        uses: actions/checkout@v3
        with:
          ref: main

      # extract pages setting
      - name: Setup Pages
        uses: actions/configure-pages@v3

      # setup node environment
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: npm
          node-version-file: '.nvmrc'

      # install dependencies
      - name: Install Packages
        run: npm ci

      - name: Get latest Fastify tag
        id: latest-fastify
        uses: oprypin/find-latest-tag@v1
        with:
          repository: fastify/fastify
          releases-only: true
      - run: echo "Fastify is at version ${{ steps.latest-fastify.outputs.tag }}"

      - name: Cache Fastify documentation
        id: release-cache
        uses: actions/cache@v3
        with:
          path: |
            scripts/releases
            scripts/releases.tag
          key: ${{ steps.latest-fastify.outputs.tag }}-release-cache

      # build website
      - name: Build website
        run: npm run build:website
        env:
          GH_TOKEN: ${{ github.token }}
          SKIP_DOWNLOADS: ${{ steps.release-cache.outputs.cache-hit }}

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: './build'

  deploy:
    needs: build-and-upload
    permissions:
      pages: write
      id-token: write
    environment:
      name: ${{ github.event_name == 'pull_request_target' && 'staging' || 'production' }}
      url: ${{ steps.deployment.outputs.page_url }}
    outputs:
      deployment_url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
        # enable preview when PR
        env:
          BASE_URL: /website-next/
        with:
          preview: ${{ github.event_name == 'pull_request_target' }}
